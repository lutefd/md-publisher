openapi: 3.0.0
info:
  title: Markdown Publisher API
  description: API for publishing and managing markdown notes
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    Note:
      type: object
      required:
        - id
        - content
      properties:
        id:
          type: string
          description: Unique identifier for the note
        content:
          type: string
          description: Markdown content of the note
        metadata:
          type: object
          properties:
            title:
              type: string
              description: Title of the note
            description:
              type: string
              description: Brief description of the note
            tags:
              type: array
              items:
                type: string
              description: List of tags associated with the note
            updated:
              type: string
              format: date-time
              description: Last update timestamp
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          description: Success message

paths:
  /publish:
    post:
      summary: Publish a new note or update an existing one
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          description: Note published successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /note/{id}:
    get:
      summary: Get a specific note by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Note ID
      responses:
        '200':
          description: Note retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      summary: Delete a note by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Note ID
      responses:
        '200':
          description: Note deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes:
    get:
      summary: List all published notes
      responses:
        '200':
          description: List of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
